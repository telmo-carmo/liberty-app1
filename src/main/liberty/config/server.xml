<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">
    <variable name="http.port"    defaultValue="9080"/>
    <variable name="https.port"   defaultValue="9443"/>
    <variable name="context.root" defaultValue="/app1" />

    <!-- Enable features -->
    <featureManager>
        <feature>jakartaee-10.0</feature>
        <feature>microProfile-7.0</feature>

        <feature>jdbc-4.3</feature>
        <feature>jndi-1.0</feature>
        <feature>jwt-1.0</feature>
    </featureManager>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
        encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
        Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->
    <jwtBuilder id="myJwtBuilder"
                algorithm="HS256"
                keyStoreRef="jwtKeystore"
                keyAlias="jwtSecret" />

    <keyStore id="jwtKeystore" location="${server.config.dir}/resources/security/jwtkeystore.jceks" type="JCEKS" password="myPassword"/>


    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm">
        <!--
        <user name="yourUserName" password="" />
        -->
        <user name="bob"    password="321" />
        <user name="alice"  password="123" />
        <group name="admin">
            <member name="bob" />
        </group>
        <group name="user">
            <member name="bob" />
            <member name="alice" />
        </group>
    </basicRegistry>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
        httpPort="${http.port}"
        httpsPort="${https.port}"
    />

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <!-- Configures the application on a specified context root -->
    <webApplication contextRoot="${context.root}" location="liberty-app1.war" >
        <application-bnd>
            <security-role name="admin">
                <group name="admin" />
            </security-role>
            <security-role name="user">
                <group name="user" />
            </security-role>
        </application-bnd>
    </webApplication>

    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true" />

  
    <library id="postgresql-library">
        <fileset dir="${shared.resource.dir}/" includes="*.jar" />
    </library>

    <dataSource id="DefaultDataSource" jndiName="jdbc/appDB1">
        <jdbcDriver libraryRef="postgresql-library" />
        <properties.postgresql databaseName="scottdb"
                               serverName="localhost"
                               portNumber="5432"
                               user="scott"
                               password="tiger" />
    </dataSource>

</server>
